@specification 1.1 
@param ( name = scenario ) 
@param ( name = session ) 
@param ( name = requestName ) 
@param ( name = expensesForPeriodEnded ) 
@param ( name = receiptDate ) 
@param ( name = receiptAmount ) 
@param ( name = expenseType ) 
@param ( name = justification ) 
@param ( name = receiptCurrency ) 
web.switch ( session = session ) 
@name ( 'Expense Report Export' ) try {
	@disabled @name ( 'Wait for Expense Report' ) /EBSArea/lib/web/basic/wait_for_element.task ( scenario = scenario , session = session , element = 'h1' , text = 'Expense Report' ) 
	@disabled @name ( 'Click Expenses Export Tab' ) /EBSArea/lib/web/click/click_link.task ( scenario = scenario , session = session , name = 'Expenses Export' ) 
	@name ( 'Enter Request Name' ) /EBSArea/lib/web/text/set_text.task ( scenario = scenario , session = session , field = 'Request Name' , xPath = 'Fndcpprogramdesc' , value = requestName ) 
	@name ( 'Click Continue button' ) /EBSArea/lib/web/button/click_button.task ( session = session , name = 'Continue' , scenario = scenario ) 
	@name ( 'Click Create Expense Report button' ) /EBSArea/lib/web/button/click_button.task ( session = session , name = 'Create Expense Report' , scenario = scenario ) 
	@name ( 'Select Expense Template' ) /EBSArea/lib/web/dropdown/select_dropdown.task ( scenario = scenario , session = session , field = 'Expense Template' , xPath = 'ExpTemplate' , value = expenseTemplate ) 
	@name ( 'Enter Expenses for Period Ended' ) /EBSArea/lib/web/text/set_text.task ( scenario = scenario , session = session , field = 'Expenses for Period Ended' , xPath = 'Purpose' , value = expensesForPeriodEnded ) 
	@name ( 'Enter Receipt Date' ) /EBSArea/lib/web/text/set_text.task ( scenario = scenario , session = session , field = 'Date' , xPath = 'N50:Date:0' , value = receiptDate ) 
	@name ( 'Select Expense Type' ) /EBSArea/lib/web/dropdown/select_dropdown.task ( scenario = scenario , session = session , field = 'Expense Type' , xPath = 'N50:WebParameterId:0' , value = expenseType ) 
	@name ( 'Enter Justification' ) /EBSArea/lib/web/text/set_text.task ( scenario = scenario , session = session , field = 'Justification' , xPath = 'N50:Justification:0' , value = justification ) 
	@name ( 'Click Show Receipt Currency button' ) /EBSArea/lib/web/button/click_button.task ( session = session , name = 'Show Receipt Currency' , scenario = scenario ) 
	@name ( 'Select Receipt Currency' ) /EBSArea/lib/web/dropdown/select_dropdown.task ( scenario = scenario , session = session , field = 'Receipt Currency' , xPath = 'N50:ReceiptCurrencyCode:0' , value = receiptCurrency ) 
	@name ( 'Click Update button' ) /EBSArea/lib/web/button/click_button.task ( session = session , name = 'Update' , scenario = scenario ) 
	@name ( 'Click Details icon' ) /EBSArea/lib/web/click/click_link.task ( scenario = scenario , session = session , name = 'N50:RBDetails:0' ) 
	@name ( 'Click Return button' ) /EBSArea/lib/web/button/click_button.task ( session = session , name = 'Return' , scenario = scenario ) 
	@name ( 'Click Save button' ) /EBSArea/lib/web/button/click_button.task ( session = session , name = 'Save' , scenario = scenario ) 
	@name ( 'Click Next button' ) /EBSArea/lib/web/button/click_button.task ( session = session , name = 'Next' , scenario = scenario ) 
	@name ( 'Click Next button' ) /EBSArea/lib/web/button/click_button.task ( session = session , name = 'Next' , scenario = scenario ) 
	@name ( 'Read Receipt Date' ) isReceiptDate = /EBSArea/lib/web/text/read_text.task ( scenario = scenario , session = session , field = 'Receipt Amount' , xPath = receiptDate ) 
	assert.true ( expression = 'isReceiptDate == receiptDate' ) 
	@name ( 'Read Receipt Amount' ) isReceiptAmount = /EBSArea/lib/web/text/read_text.task ( scenario = scenario , session = session , field = 'Receipt Amount' , xPath = 'Review Receipt Amount' ) 
	assert.true ( expression = 'isReceiptAmount == receiptAmount+" GBP"' ) 
	@name ( 'Read Expense Type' ) isExpenseType = /EBSArea/lib/web/text/read_text.task ( scenario = scenario , session = session , field = 'Warning' , xPath = expenseType ) 
	assert.true ( expression = 'isExpenseType == expenseType' ) 
	@name ( 'Read Justification' ) isJustification = /EBSArea/lib/web/text/read_text.task ( scenario = scenario , session = session , field = 'Justification' , xPath = justification ) 
	assert.true ( expression = 'isJustification == justification' ) 
	@name ( 'Click Expense Allocations Tab' ) /EBSArea/lib/web/click/click_dup_link.task ( scenario = scenario , session = session , name = 'Expense Allocations' , id = 'N79' ) 
	@name ( 'Click Weekly Summary Tab' ) /EBSArea/lib/web/click/click_dup_link.task ( scenario = scenario , session = session , name = 'Weekly Summary' , id = 'N79' ) 
	@name ( 'Click Submit button' ) /EBSArea/lib/web/button/click_button.task ( session = session , name = 'Submit' , scenario = scenario ) 
	@name ( 'Read Warning Message' ) warning = /EBSArea/lib/web/text/read_text.task ( scenario = scenario , session = session , field = 'Warning' , xPath = 'Expense report number' ) 
	@disabled @name ( 'Click Printable Page button' ) /EBSArea/lib/web/button/click_button.task ( session = session , name = 'Printable Page' , scenario = scenario ) 
	@name ( 'Click Return button' ) /EBSArea/lib/web/button/click_button.task ( session = session , name = 'Return' , scenario = scenario ) 
	@name ( 'Read Report Number' ) isReportNumber = /EBSArea/lib/web/text/read_text.task ( scenario = scenario , session = session , field = 'Report Number' , xPath = 'N11:ReportNumberEnabled:0' ) 
	@name ( 'Read Report Status' ) isReportStatus = /EBSArea/lib/web/text/read_text.task ( scenario = scenario , session = session , field = 'Report Status' , xPath = 'N11:FndStatusCode:0' ) 
	assert.true ( expression = 'isReportStatus == "Pending Manager Review"' ) 
	@name ( 'Read Report Total' ) isReportTotal = /EBSArea/lib/web/text/read_text.task ( scenario = scenario , session = session , field = 'Report Total' , xPath = 'N11:ReportTotal:0' ) 
	assert.true ( expression = 'isReportTotal == receiptAmount' ) 
} 
@name ( 'Handle failure' ) catch {
	/EBSArea/lib/web/basic/capture_screen_web.task ( scenario = scenario , session = session , name = ^scenario+ "_expense_report_export_fail"^ ) 
	error ^"Failed to perform expense report export for scenario [" + scenario +"] with session ["+ session +"]"^ 
} 
