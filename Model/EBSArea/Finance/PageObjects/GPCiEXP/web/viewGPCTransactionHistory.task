@specification 1.1 
@param ( name = scenario ) 
@param ( name = session ) 
@param ( name = expenseTemplate ) 
@param ( name = expensesForPeriodEnded ) 
@param ( name = expenseType ) 
@param ( name = justification ) 
@param ( name = filePath ) 
@param ( name = unappliedAdvanceReason ) 
web.switch ( session = session ) 
@name ( 'View GPC Transaction History' ) try {
	@name ( 'Wait for Expenses Home' ) /EBSArea/lib/web/basic/wait_for_element.task ( scenario = scenario , session = session , element = 'h1' , text = 'Expenses Home' ) 
	@name ( 'Click Credit Card Transactions Link' ) /EBSArea/lib/web/click/click_link.task ( scenario = scenario , session = session , name = 'Credit Card Transactions' ) 
	@name ( 'Read Age from transaction list' ) isAgeBeforeCreateReport = /EBSArea/lib/web/text/read_text.task ( scenario = scenario , session = session , field = 'Age' , xPath = 'TransactionsListOnlyT:Age:0' ) 
	@name ( 'Click Expenses Home Link' ) /EBSArea/lib/web/click/click_link.task ( scenario = scenario , session = session , name = 'Expenses Home' ) 
	@name ( 'Click Create Expense Report button' ) /EBSArea/lib/web/button/click_button.task ( session = session , name = 'Create Expense Report' , scenario = scenario ) 
	@name ( 'Select Expense Template' ) /EBSArea/lib/web/dropdown/select_dropdown.task ( scenario = scenario , session = session , field = 'Expense Template' , xPath = 'ExpTemplate' , value = expenseTemplate ) 
	@name ( 'Enter Expenses for Period Ended' ) /EBSArea/lib/web/text/set_text.task ( scenario = scenario , session = session , field = 'Expenses for Period Ended' , xPath = 'Purpose' , value = expensesForPeriodEnded ) 
	@name ( 'Click Next button' ) /EBSArea/lib/web/button/click_button.task ( session = session , name = 'Next' , scenario = scenario ) 
	@disabled @name ( 'Read Warning Message' ) warning = /EBSArea/lib/web/text/read_text.task ( scenario = scenario , session = session , field = 'Warning' , xPath = 'Number of transactions on this credit card older than' ) 
	@name ( 'Select Transactions Check box' ) /EBSArea/lib/web/checkbox/tick_dup_checkbox.task ( scenario = scenario , session = session , id = 'AvailableTrxnList' , xPath = 'AvailableTrxnList:selected:0' ) 
	@name ( 'Click Next button' ) /EBSArea/lib/web/button/click_button.task ( session = session , name = 'Next' , scenario = scenario ) 
	@name ( 'Select Expense Type' ) /EBSArea/lib/web/dropdown/select_dropdown.task ( scenario = scenario , session = session , field = 'Expense Type' , xPath = 'N3:ExpenseType:0' , value = expenseType ) 
	@name ( 'Enter Justification' ) /EBSArea/lib/web/text/set_text.task ( scenario = scenario , session = session , field = 'Justification' , xPath = 'N3:Justification:0' , value = justification ) 
	@name ( 'Click Save button' ) /EBSArea/lib/web/button/click_button.task ( session = session , name = 'Save' , scenario = scenario ) 
	@name ( 'Read Expense Report Number' ) isExpenseReportNumber = /EBSArea/lib/web/text/read_text.task ( scenario = scenario , session = session , field = 'Information' , xPath = 'click Submit on the Review page to submit the report for approval' ) 
	@name ( 'Click Next button' ) /EBSArea/lib/web/button/click_button.task ( session = session , name = 'Next' , scenario = scenario ) 
	@name ( 'Click Next button' ) /EBSArea/lib/web/button/click_button.task ( session = session , name = 'Next' , scenario = scenario ) 
	@name ( 'Click Account Allocations Tab' ) /EBSArea/lib/web/click/click_link.task ( scenario = scenario , session = session , name = 'Account Allocations' ) 
	@name ( 'Click Next button' ) /EBSArea/lib/web/button/click_button.task ( session = session , name = 'Next' , scenario = scenario ) 
	@name ( 'Is Advance Exists' ) isAdvanceExists = /EBSArea/lib/web/basic/element_exists.task ( scenario = scenario , session = session , element = '*' , text = 'Advance Number' ) 
	@name ( 'To select advance number' ) if isAdvanceExists {
		@name ( 'Click advance number search' ) /EBSArea/lib/web/click/click_link.task ( scenario = scenario , session = session , name = 'Search: Advance Number' ) 
		@name ( 'Switch browser to select advance number' ) /EBSArea/lib/web/switchbrowser/switch_browser.task ( scenario = scenario , session = session , title = 'Search and Select*' ) 
		@name ( 'Click Go button' ) /EBSArea/lib/web/button/click_button.task ( session = session , name = 'Go' , scenario = scenario ) 
		@name ( 'Click quick select' ) /EBSArea/lib/web/click/click_link.task ( scenario = scenario , session = session , name = 'Quick Select' ) 
		@name ( 'Is Unapplied Advance Reason enable' ) isReasonDisabled = /EBSArea/lib/web/basic/element_exists.task ( scenario = scenario , session = session , element = '*' , xPath = '[@id="Reason"][@disabled]' ) 
		@name ( 'To enter unapplied advance reason' ) if ^!isReasonDisabled^ {
			@name ( 'Enter Unapplied Advance Reason' ) /EBSArea/lib/web/textarea/set_text_area.task ( scenario = scenario , session = session , field = 'Unapplied Advance Reason' , parentId = 'AdvancesApplicationRN' , xPath = 'Reason' , value = unappliedAdvanceReason ) 
		} 
		@name ( 'Click Next button' ) /EBSArea/lib/web/button/click_button.task ( session = session , name = 'Next' , scenario = scenario ) 
	} 
	@name ( 'Click Attachments icon +' ) /EBSArea/lib/web/click/click_dup_link.task ( scenario = scenario , session = session , id = 'ReviewBusinessExp:LineAttachments:0' ) 
	@name ( 'Upload File' ) /EBSArea/lib/web/upload/upload.task ( scenario = scenario , session = session , id = 'FileInput_oafileUpload' , filePath = filePath ) 
	@name ( 'Click Apply button' ) /EBSArea/lib/web/button/click_button.task ( session = session , name = 'Apply' , scenario = scenario ) 
	@name ( 'Click Submit button' ) /EBSArea/lib/web/button/click_button.task ( session = session , name = 'Submit' , scenario = scenario ) 
	@name ( 'Click Credit Card Transactions Link' ) /EBSArea/lib/web/click/click_link.task ( scenario = scenario , session = session , name = 'Credit Card Transactions' ) 
	@name ( 'Press OK to continue' ) /EBSArea/lib/web/presskey/press_enter.task ( scenario = scenario , session = session , xPath = '/alert' ) 
	@name ( 'Read Age from transaction list' ) isAgeAfterCreateReport = /EBSArea/lib/web/text/read_text.task ( scenario = scenario , session = session , field = 'Age' , xPath = 'TransactionsListOnlyT:Age:0' ) 
	assert.true ( expression = 'isAgeBeforeCreateReport != isAgeAfterCreateReport' ) 
	@name ( 'Click Transaction History' ) /EBSArea/lib/web/click/click_link.task ( scenario = scenario , session = session , name = 'Transaction History' ) 
} 
@name ( 'Handle failure' ) catch {
	/EBSArea/lib/web/basic/capture_screen_web.task ( scenario = scenario , session = session , name = ^ scenario+"_view_gpc_transaction_history_fail"^ ) 
	error ^"Failed to perform view gpc transaction history for scenario [" + scenario +"] with session ["+ session +"]"^ 
} 
