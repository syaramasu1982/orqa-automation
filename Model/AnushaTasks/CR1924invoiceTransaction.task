@specification 1.1 
@param ( name = scenario ) 
@param ( name = session ) 
@param ( name = environment ) 
@param ( name = source ) 
@param ( name = selectClass ) 
@param ( name = glDate ) 
@param ( name = currency ) 
@param ( name = rateType ) 
@param ( name = type ) 
@param ( name = name ) 
@param ( name = number ) 
@param ( name = description ) 
@param ( name = quantity ) 
@param ( name = unitPrice ) 
@param ( name = taxClassification ) 
@param ( name = distributions ) 
@param ( name = closeApp ) 
@param ( name = closePopup ) 
@param ( name = taxStatus ) 
@name ( 'Invoice Transaction' ) try {
	@name ( 'Launch Oracle Application' ) /EBSArea/lib/java/basic/launch_java_app.task ( session = session , environment = environment ) 
	@name ( 'Wait For Transactions' ) /EBSArea/lib/java/basic/wait_for_title.task ( scenario = scenario , session = session , title = 'Transactions' ) 
	@name ( 'Enter Source' ) /EBSArea/lib/java/text/set_text.task ( scenario = scenario , session = session , field = 'Source' , title = 'Transactions' , xPath = 'FScrollBox[2]//VTextField[1]' , value = source ) 
	if ^source == "MANUAL-OTHER"^ {
		@name ( 'Select Class' ) /EBSArea/lib/java/dropdown/select_dropdown.task ( scenario = scenario , session = session , field = 'Class' , title = 'Transactions' , xPath = 'FScrollBox[2]//VPopList[1]' , value = selectClass ) 
		@name ( 'Wait For Batch Sources' ) /EBSArea/lib/java/basic/wait_for_title.task ( scenario = scenario , session = session , title = 'Batch Sources' ) 
		@name ( 'Click OK button' ) /EBSArea/lib/java/button/click_push_button.task ( scenario = scenario , session = session , name = 'OK' ) 
	} 
	@name ( 'Select Class' ) /EBSArea/lib/java/dropdown/select_dropdown.task ( scenario = scenario , session = session , field = 'Class' , title = 'Transactions' , xPath = 'FScrollBox[2]//VPopList[1]' , value = selectClass ) 
	@name ( 'Enter Type' ) /EBSArea/lib/java/text/set_text_tab_check.task ( scenario = scenario , session = session , field = 'Type' , title = 'Transactions' , xPath = 'FScrollBox[2]//VTextField[7]' , value = type ) 
	@name ( 'Enter GL Date' ) /EBSArea/lib/java/text/set_text_tab_check.task ( scenario = scenario , session = session , field = 'GL Date' , title = 'Transactions' , xPath = 'FScrollBox[2]//VTextField[5]' , value = glDate ) 
	@name ( 'Enter Currency' ) /EBSArea/lib/java/text/set_text_tab_check.task ( scenario = scenario , session = session , field = 'Currency' , title = 'Transactions' , xPath = 'FScrollBox[2]//VTextField[6]' , value = currency ) 
	@name ( 'Click on Reference' ) /EBSArea/lib/java/presskey/press_tab.task ( scenario = scenario , session = session , field = 'Invoice' , title = 'Transactions' , xPath = 'FScrollBox[2]//VTextField[7]' ) 
	@name ( 'Check exchange rate pop up exists' ) isExchangeRateExists = /EBSArea/lib/java/basic/element_exists.task ( scenario = scenario , session = session , field = 'Exchange Rate' , title = 'Exchange Rate' ) 
	if isExchangeRateExists {
		@name ( 'Wait For Exchange Rate' ) /EBSArea/lib/java/basic/wait_for_title.task ( scenario = scenario , session = session , title = 'Exchange Rate' ) 
		@name ( 'Enter Rate Type' ) /EBSArea/lib/java/text/set_text_tab_check.task ( scenario = scenario , session = session , field = 'Rate Type' , title = 'Exchange Rate' , xPath = 'VTextField[2]' , value = rateType ) 
		@name ( 'Click OK Button' ) /EBSArea/lib/java/button/click_button_java.task ( scenario = scenario , session = session , name = 'OK' ) 
	} 
	@name ( 'Enter Name' ) /EBSArea/lib/java/text/set_text_tab_check.task ( scenario = scenario , session = session , field = 'Name' , title = 'Transactions' , xPath = 'FScrollBox[1]//FScrollBox[1]//VTextField[1]' , value = name ) 
	@name ( 'Enter Number' ) /EBSArea/lib/java/text/set_text_tab_check.task ( scenario = scenario , session = session , field = 'Number' , title = 'Transactions' , xPath = 'FScrollBox[1]//FScrollBox[1]//VTextField[2]' , value = number ) 
	@name ( 'Capture Screen' ) /EBSArea/lib/java/basic/capture_screen_java.task ( scenario = scenario , session = session , name = 'invoice_transaction_first_page' ) 
	@name ( 'Click More Tab' ) /EBSArea/lib/java/click/click_tab_by_index.task ( scenario = scenario , session = session , name = 'More' ) 
	@name ( 'Click Line Items' ) /EBSArea/lib/java/button/click_button.task ( scenario = scenario , session = session , name = 'Line Items' ) 
	@name ( 'Wait For Lines' ) /EBSArea/lib/java/basic/wait_for_title.task ( scenario = scenario , session = session , title = 'Lines' ) 
	@name ( 'Enter Description' ) /EBSArea/lib/java/text/set_text_tab_check.task ( scenario = scenario , session = session , field = 'Descrption' , title = 'Lines' , xPath = 'FScrollBox[2]//VTextField[34]' , value = description ) 
	@name ( 'Enter Quantity' ) /EBSArea/lib/java/text/set_text_tab_check.task ( scenario = scenario , session = session , field = 'Quantity' , title = 'Lines' , xPath = 'FScrollBox[1]//FScrollBox[1]//VTextField[12]' , value = quantity ) 
	@name ( 'Enter Unit Price' ) /EBSArea/lib/java/text/set_text_tab_check.task ( scenario = scenario , session = session , field = 'Unit Price' , title = 'Lines' , xPath = 'FScrollBox[1]//FScrollBox[1]//VTextField[23]' , value = unitPrice ) 
	@name ( 'Enter Tax Classification' ) /EBSArea/lib/java/text/set_text_tab.task ( scenario = scenario , session = session , field = 'Tax Classification' , title = 'Lines' , xPath = 'FScrollBox[1]//FScrollBox[1]//VTextField[45]' , value = taxClassification ) 
	@name ( 'Wait For Line Transaction Flexfield' ) /EBSArea/lib/java/basic/wait_for_title.task ( scenario = scenario , session = session , title = 'Line Transaction Flexfield' ) 
	@name ( 'Click Cancel' ) /EBSArea/lib/java/button/click_form_button.task ( scenario = scenario , session = session , name = 'Cancel' ) 
	@disabled @name ( 'Click Cancel' ) '/EBSArea/lib/java/lib/button/Click OK' ( scenario #= '=scenario' , session #= '=session' , name #= '="Cancel"' ) 
	@name ( 'Click Tool Bar Save Button' ) /EBSArea/lib/java/button/click_toolbar_button.task ( scenario = scenario , session = session , name = 'Save' ) 
	@name ( 'Capture Screen' ) /EBSArea/lib/java/basic/capture_screen_java.task ( scenario = scenario , session = session , name = 'invoice_transaction_lines_page' ) 
	@name ( 'Click Tax' ) /EBSArea/lib/java/button/click_button.task ( scenario = scenario , session = session , name = 'Tax' ) 
	@name ( 'Wait For Detail Tax Lines' ) /EBSArea/lib/java/basic/wait_for_title.task ( scenario = scenario , session = session , title = 'Detail Tax Lines' ) 
	@name ( 'Capture Screen' ) /EBSArea/lib/java/basic/capture_screen_java.task ( scenario = scenario , session = session , name = ^"Tax_lines_"+description^ ) 
	@name ( 'Click OK' ) /EBSArea/lib/java/button/click_button.task ( scenario = scenario , session = session , name = 'OK' ) 
	@name ( 'Click Tool Bar Save Button' ) /EBSArea/lib/java/button/click_toolbar_button.task ( scenario = scenario , session = session , name = 'Save' ) 
	@name ( 'Click Distributions' ) /EBSArea/lib/java/button/click_button.task ( scenario = scenario , session = session , name = 'Distributions' ) 
	@name ( 'Wait For Distributions' ) /EBSArea/lib/java/basic/wait_for_title.task ( scenario = scenario , session = session , title = 'Distributions' ) 
	@name ( 'Enter GL Account' ) /EBSArea/lib/java/text/set_text_tab_check.task ( scenario = scenario , session = session , field = 'GL Account' , title = 'Distributions' , xPath = 'FScrollBox[1]//FScrollBox[1]//VTextField[39]' , value = distributions ) 
	@name ( 'Capture Screen' ) /EBSArea/lib/java/basic/capture_screen_java.task ( scenario = scenario , session = session , name = 'invoice_transaction_distributions_page' ) 
	@name ( 'Click Tool Bar Save Button' ) /EBSArea/lib/java/button/click_toolbar_button.task ( scenario = scenario , session = session , name = 'Save' ) 
	@name ( 'Click Distributions Close iCon' ) /EBSArea/lib/java/click/click_text.task ( scenario = scenario , session = session , title = 'Distributions' , xPath = 'ToolBar/ToolBarButton[3]' , field = 'Close icon' ) 
	@name ( 'Click Lines Close iCon' ) /EBSArea/lib/java/click/click_text.task ( scenario = scenario , session = session , title = 'Lines' , xPath = 'ToolBar/ToolBarButton[3]' , field = 'Close icon' ) 
	@disabled if ^source == "Manual Standard - ST"^ {
		@disabled @name ( 'Read Operating Unit' ) isOperatingUnit = /EBSArea/lib/java/text/read_text.task ( scenario = scenario , session = session , field = 'Operating Unit' , xPath = 'VTextField329' ) 
		@disabled assert.true ( expression = 'isOperatingUnit == "MRC - Operating Unit"' ) 
		@disabled @name ( 'Read Address Line1' ) isAddressLine1 = /EBSArea/lib/java/text/read_text.task ( scenario = scenario , session = session , field = 'Address' , xPath = 'VTextField344' ) 
		@disabled @name ( 'Read Address Line2' ) isAddressLine2 = /EBSArea/lib/java/text/read_text.task ( scenario = scenario , session = session , field = 'Address' , xPath = 'VTextField345' ) 
		@disabled @name ( 'Read Address Line3' ) isAddressLine3 = /EBSArea/lib/java/text/read_text.task ( scenario = scenario , session = session , field = 'Address' , xPath = 'VTextField345' ) 
	} 
	@name ( 'Read AR Invoice Number' ) invoiceNumber = /EBSArea/lib/java/text/read_text.task ( scenario = scenario , session = session , field = 'Number' , xPath = 'VTextField45' ) 
	@name ( 'Click Disctibution button' ) /EBSArea/lib/java/button/click_button.task ( scenario = scenario , session = session , name = 'Distributions' ) 
	@name ( 'Wait For Distributions' ) /EBSArea/lib/java/basic/wait_for_title.task ( scenario = scenario , session = session , title = 'Distributions' ) 
	@name ( 'Read Receivable' ) receivable = /EBSArea/lib/java/text/read_text.task ( scenario = scenario , session = session , field = 'Number' , xPath = 'VTextField538' ) 
	@name ( 'Read Revenue' ) revenue = /EBSArea/lib/java/text/read_text.task ( scenario = scenario , session = session , field = 'Number' , xPath = 'VTextField539' ) 
	@name ( 'Read Tax' ) tax = /EBSArea/lib/java/text/read_text.task ( scenario = scenario , session = session , field = 'Number' , xPath = 'VTextField540' ) 
	@name ( 'Click Distributions Close iCon' ) /EBSArea/lib/java/click/click_text.task ( scenario = scenario , session = session , title = 'Distributions' , xPath = 'ToolBar/ToolBarButton[3]' , field = 'Close icon' ) 
	@name ( 'Click Complete button' ) /EBSArea/lib/java/button/click_button.task ( scenario = scenario , session = session , name = 'Complete' ) 
	line = control.evaluate ( expression = 'unitPrice = unitPrice+".00"' ) 
	@name ( 'Read Balance Due Line' ) isBalanceDueLine = /EBSArea/lib/java/text/read_text.task ( scenario = scenario , session = session , field = 'Line' , xPath = 'VTextField55' ) 
	while ^isBalanceDueLine != line^ {
		@name ( 'Click Refresh Button' ) /EBSArea/lib/java/button/click_button_java.task ( scenario = scenario , session = session , name = 'Refresh' ) 
		sleep 5 
		@name ( 'Read Balance Due Line' ) isBalanceDueLine = /EBSArea/lib/java/text/read_text.task ( scenario = scenario , session = session , field = 'Line' , xPath = 'VTextField55' ) 
	} 
	@name ( 'Tax Calculation' ) tax = control.evaluate ( expression = '//int value= Integer.parseInt(unitPrice)
//int tax = (double)(value*(20.0f/100.0f));
//tax = tax+".00"

float stdPer = 20;
def value = 100;
def tax = (int)((stdPer * 100.0f) / value);
tax = tax+".00"' ) 
	@name ( 'Read Balance Due Tax' ) isBalanceDueTax = /EBSArea/lib/java/text/read_text.task ( scenario = scenario , session = session , field = 'Tax' , xPath = 'VTextField56' ) 
	@disabled assert.true ( expression = 'isBalanceDueTax == tax' ) 
	@name ( 'Read Balance Due Total' ) isBalanceDueTotal = /EBSArea/lib/java/text/read_text.task ( scenario = scenario , session = session , field = 'Total' , xPath = 'VTextField59' ) 
	@disabled @name ( 'Tax Calculation' ) total = control.evaluate ( expression = 'int intUnitPtice = unitPrice as int
int intTax = tax as int

def total = unitPrice+tax

total = total+".00"
' ) 
	@disabled assert.true ( expression = 'isBalanceDueTotal == total' ) 
	@name ( 'Invoice Screen Shot' ) /EBSArea/lib/java/basic/capture_screen_java.task ( scenario = scenario , session = session , name = ^ "invoice_transaction_"+invoiceNumber+""^ ) 
	sleep 2 
	@name ( 'Click on main menu Tools' ) /EBSArea/lib/java/click/click_main_menu.task ( scenario = scenario , session = session , name = 'Tools' , menu = 'LWMenuBar' , menuItem = 'LWMenu[5]' ) 
	@name ( 'Click on Create Accounting' ) /EBSArea/lib/java/click/click_main_menu.task ( scenario = scenario , session = session , name = 'Create Accounting' , menu = 'LWPopupMenu' , menuItem = 'LWMenuItem[2]' ) 
	@name ( 'Wait For Create Accounting' ) /EBSArea/lib/java/basic/wait_for_title.task ( scenario = scenario , session = session , title = 'Create Accounting' ) 
	@name ( 'Click Ok button' ) /EBSArea/lib/java/button/click_button.task ( scenario = scenario , session = session , name = 'Ok' ) 
	@name ( 'Wait For Note' ) /EBSArea/lib/java/basic/wait_for_title.task ( scenario = scenario , session = session , title = 'Note' ) 
	@name ( 'Create Accounting Screenshot' ) /EBSArea/lib/java/basic/capture_screen_java.task ( scenario = scenario , session = session , name = ^ "create_accounting_"+invoiceNumber+""^ ) 
	@name ( 'Click OK ' ) /EBSArea/lib/java/button/click_form_button.task ( scenario = scenario , session = session , name = 'OK' ) 
	@disabled @name ( 'Click OK button' ) '/EBSArea/lib/java/lib/button/Click OK' ( scenario #= '=scenario' , session #= '=session' , name #= '="OK"' ) 
	sleep 2 
	@name ( 'Click on main menu View' ) /EBSArea/lib/java/click/click_main_menu.task ( scenario = scenario , session = session , name = 'Actions' , menu = 'LWMenuBar' , menuItem = 'LWMenu[3]' ) 
	@name ( 'Click on Requests' ) /EBSArea/lib/java/click/click_main_menu.task ( scenario = scenario , session = session , name = 'Requests' , menu = 'LWPopupMenu' , menuItem = 'LWMenuItem[8]' ) 
	@name ( 'Wait For Find Requests' ) /EBSArea/lib/java/basic/wait_for_title.task ( scenario = scenario , session = session , title = 'Find Requests' ) 
	@name ( 'Click Find button' ) /EBSArea/lib/java/button/click_button.task ( scenario = scenario , session = session , name = 'Find' ) 
	@name ( 'Read Request ID' ) readRequestID = /EBSArea/lib/java/text/read_text_from_table.task ( scenario = scenario , session = session , field = 'Request ID' , row = '1' , column = '2' ) 
	@name ( 'Read Phase' ) isPhase = /EBSArea/lib/java/text/read_row_from_table.task ( scenario = scenario , session = session , fieldValue = readRequestID , fieldColumnIndex = '2' , readColumnIndex = '5' ) 
	while ^isPhase !="Completed"^ {
		@name ( 'Click Refresh' ) /EBSArea/lib/java/button/click_button.task ( scenario = scenario , session = session , name = 'Refresh Data' ) 
		sleep 5 
		@name ( 'Read Phase' ) isPhase = /EBSArea/lib/java/text/read_row_from_table.task ( scenario = scenario , session = session , fieldValue = readRequestID , fieldColumnIndex = '2' , readColumnIndex = '5' ) 
	} 
	@name ( 'Resolve timestamp' ) timeStamp = control.evaluate ( expression = 'return new java.text.SimpleDateFormat("ddHHMMSS").format(java.util.Calendar.getInstance().getTime())' ) 
	@name ( 'Capture Screen' ) /EBSArea/lib/java/basic/capture_screen_java.task ( scenario = scenario , session = session , name = ^"create_accounting_report_"+source+"_"+timeStamp^ ) 
	if ^closePopup != null && String.valueOf(closePopup).trim().length() > 0^ {
		@name ( 'Click Transactions Close iCon' ) /EBSArea/lib/java/click/click_text.task ( scenario = scenario , session = session , title = 'Transactions' , xPath = 'ToolBar/ToolBarButton[3]' , field = 'Close icon' ) 
	} 
	if ^closeApp != null && String.valueOf(closeApp).trim().length() > 0^ {
		@name ( 'Close Application' ) /EBSArea/lib/java/basic/close_java_app.task ( session = session ) 
	} 
} 
@name ( 'Handle failure' ) catch {
	/EBSArea/lib/java/basic/capture_screen_java.task ( scenario = scenario , session = session , name = ^ scenario+"_invoice_transaction_fail"^ ) 
} 
'Return Result' {
	@name ( 'Create Result Map' ) result = map.new ( ) 
	@name ( 'Add Invoice to Map' ) map.add ( map = result , key = 'INVOICENUMBER' , value = ^=invoiceNumber^ ) 
	@name ( 'Return invoice number' ) result = control.evaluate ( expression = 'return result' ) 
} 
@disabled @name ( 'Return Number' ) invocieNumber = control.evaluate ( expression = 'return invocieNumber' ) 
