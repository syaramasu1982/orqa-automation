@specification 1.1 
@param ( name = session ) 
@param ( name = scenario ) 
@param ( name = environment ) 
@param ( name = organization ) 
@param ( name = closeApp ) 
@param ( name = status ) 
@disabled @name ( 'Resolve session' ) session = control.evaluate ( expression = "return env['session.web']" ) 
@name ( 'Open INV Period' ) try {
	@name ( 'Launch Oracle Application' ) /EBSArea/lib/java/basic/launch_java_app.task ( session = session , environment = environment ) 
	@name ( 'Wait For Organizations' ) /EBSArea/lib/java/basic/wait_for_title.task ( session = session , title = 'Organizations' ) 
	'Enter Organization Name' {
		@name ( 'Wait For Organizations' ) /EBSArea/lib/java/basic/wait_for_title.task ( scenario = scenario , session = session , title = 'Organizations' ) 
		@name ( 'Enter Organization Name' ) /EBSArea/lib/java/text/set_lw_text_field.task ( scenario = scenario , session = session , field = 'Find' , xPath = '%' , value = organization ) 
		@name ( 'Click on Find button' ) /EBSArea/lib/java/button/click_push_button.task ( scenario = scenario , session = session , name = 'Find' ) 
	} 
	@name ( 'Wait For Periods' ) /EBSArea/lib/java/basic/wait_for_title.task ( session = session , title = 'Inventory Accounting Periods' ) 
	/EBSArea/lib/java/presskey/press_f11_new.task ( scenario = scenario , session = session , title = 'Inventory Accounting Periods' , xPath = 'VTextField[@name="VTextField16"]' , field = 'Status' ) 
	@name ( 'Enter Status' ) /EBSArea/lib/java/text/set_text.task ( scenario = scenario , session = session , field = 'Status' , title = 'Inventory Accounting Periods' , xPath = 'VTextField[@name="VTextField16"]' , value = status ) 
	/EBSArea/lib/java/presskey/press_ctrl_f11_new.task ( scenario = scenario , session = session , title = 'Inventory Accounting Periods' , filed = 'Status' , xPath = "VTextField[@name='VTextField16']" ) 
	@name ( 'Read Latest Open Period' ) lastOpenPeriod = /EBSArea/lib/java/text/read_text_from_input_field.task ( scenario = scenario , session = session , field = 'Period' , title = 'Inventory Accounting Periods' , xPath = 'VTextField[@name="VTextField26"]' ) 
	lastOpenPeriodDate = control.evaluate ( expression = "String oldDate = lastOpenPeriod
Date date = Date.parse( 'MMM-yyyy', oldDate )
String lastOpenPeriodDate = date.format( 'yyyyMM' )
return lastOpenPeriodDate" ) 
	@name ( 'Calculate Period' ) periodName = control.evaluate ( expression = 'def periodName = null
use (groovy.time.TimeCategory) {
def today = new Date()
periodName = today

}

periodName = periodName.format("yyyyMM")
return periodName' ) 
	if ^lastOpenPeriodDate==periodName^ {
		/EBSArea/lib/java/basic/capture_screen_java.task ( scenario = scenario , session = session , name = ^ "Period_"+periodName+"_matches_last_open_period_name"^ ) 
		if ^closeApp != null && String.valueOf(closeApp).trim().length() > 0^ {
			@name ( 'Close Application' ) /EBSArea/lib/java/basic/close_java_app.task ( session = session ) 
		} 
	} 
	if ^lastOpenPeriodDate>periodName^ {
		/EBSArea/lib/java/basic/capture_screen_java.task ( scenario = scenario , session = session , name = ^ "Period_"+periodName+"_greater_than_last_open_period_name"^ ) 
		if ^closeApp != null && String.valueOf(closeApp).trim().length() > 0^ {
			@name ( 'Close Application' ) /EBSArea/lib/java/basic/close_java_app.task ( session = session ) 
		} 
	} 
	while ^lastOpenPeriodDate<periodName^ {
		@disabled @name ( 'Read Latest Open Period' ) lastOpenPeriod = /EBSArea/lib/java/text/read_text_from_input_field.task ( scenario = scenario , session = session , field = 'Period' , title = 'Inventory Accounting Periods' , xPath = 'VTextField[@name="VTextField26"]' ) 
		date1 = control.evaluate ( expression = "String oldDate = lastOpenPeriod
Date date = Date.parse( 'MMM-yyyy', oldDate )
//String date1=date.format('MMM-yyyy')
String date1=null
use (groovy.time.TimeCategory) {
 date=(date + 1.months)
date1=date.format('MMM-yyyy')
}
//date=date.format('MMM-yyyy')

return date1" ) 
		/EBSArea/lib/java/presskey/press_f11_new.task ( scenario = scenario , session = session , title = 'Inventory Accounting Periods' , xPath = 'VTextField[@name="VTextField26"]' , field = 'Period' ) 
		@disabled lastOpen = control.evaluate ( expression = "String oldDate = lastOpenPeriod
Date date = Date.parse( 'MMM-yyyy', oldDate )
def lastOpen = date.format( 'mmm-yyyy' )

use (groovy.time.TimeCategory) {
//lastOpen=new Date()
lastOpen=lastOpen+30.days
}
lastOpen=lastOpen.format('MMM-yyyy')
return lastOpen" ) 
		@disabled @name ( 'Calculate Period' ) previousPeriod = control.evaluate ( expression = 'def previousPeriod = null
use (groovy.time.TimeCategory) {
def today = new Date()
previousPeriod = today
previousPeriod=previousPeriod-30.days
}
previousPeriod=previousPeriod.format("MMM-yyyy")

//periodName=periodName+30.days

return previousPeriod' ) 
		@disabled @name ( 'Calculate Future Period' ) futurePeriod = control.evaluate ( expression = 'def futurePeriod = null
use (groovy.time.TimeCategory) {
def today = new Date()
futurePeriod= lastOpenPeriod+30.days
}
//periodName = periodName.format("yyyyMM")
futurePeriod = futurePeriod.format("MMM-yyyy")
//periodName=periodName+30.days

return futurePeriod' ) 
		@name ( 'Enter Period' ) /EBSArea/lib/java/text/set_text.task ( scenario = scenario , session = session , field = 'Period' , title = 'Inventory Accounting Periods' , xPath = 'VTextField[@name="VTextField26"]' , value = date1 ) 
		/EBSArea/lib/java/presskey/press_ctrl_f11_new.task ( scenario = scenario , session = session , title = 'Inventory Accounting Periods' , filed = 'Status' , xPath = "VTextField[@name='VTextField26']" ) 
		@name ( 'Click on Change Status button' ) /EBSArea/lib/java/button/click_button_java.task ( scenario = scenario , session = session , name = 'Change Status...' ) 
		@name ( 'Click OK' ) /EBSArea/lib/java/button/click_form_button.task ( scenario = scenario , session = session , name = 'OK' ) 
		@name ( 'Click Tool Bar Save Button' ) /EBSArea/lib/java/button/click_toolbar_button.task ( scenario = scenario , session = session , name = 'Save' ) 
		@name ( 'Read Latest Open Period' ) lastOpenPeriod = /EBSArea/lib/java/text/read_text_from_input_field.task ( scenario = scenario , session = session , field = 'Period' , title = 'Inventory Accounting Periods' , xPath = 'VTextField[@name="VTextField26"]' ) 
		lastOpenPeriodDate = control.evaluate ( expression = "String oldDate = lastOpenPeriod
Date date = Date.parse( 'MMM-yyyy', oldDate )
String lastOpenPeriodDate = date.format( 'yyyyMM' )
return lastOpenPeriodDate" ) 
		@name ( 'Calculate Period' ) periodName = control.evaluate ( expression = 'def periodName = null
use (groovy.time.TimeCategory) {
def today = new Date()
periodName = today

}

periodName = periodName.format("yyyyMM")
return periodName' ) 
	} 
	@name ( 'Capture Screen' ) /EBSArea/lib/java/basic/capture_screen_java.task ( scenario = scenario , session = session , name = 'open_INV_period_name' ) 
	if ^closeApp != null && String.valueOf(closeApp).trim().length() > 0^ {
		@name ( 'Close Application' ) /EBSArea/lib/java/basic/close_java_app.task ( session = session ) 
	} 
} 
